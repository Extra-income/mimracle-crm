var $ = require("./util.js");var template_function = {    extTemplate:function(template,global){        template.helper("e",function(func){            var result = "";            if(func.indexOf("(") <0 || func.indexOf(")") <0 ){                func+="()";            }            eval("result = "+func+";");            return result;        });        template.helper("jsontostr",function(json){            try{                if(!json){                    return "null";                }                return JSON.stringify(json);            }catch(e){                console.log(e);            }        });        template.helper('strtoobj', function(str){            try{                if(!str){                    return null;                }                return JSON.parse(str);            }catch(e){                console.log(e);            }        });        /** 格式化价格*/        template.helper("fp0",function(price){            if(!price){                return "0" ;            }            return (price/100);        });        template.helper("fp",function(price){            if(!price){                return "0.00" ;            }            return (price/100).toFixed(2);        });        /** 格式化时间 具体到时分秒*/        template.helper("ft",function(time){            if(!time){                return "未知";            }            var d = new Date(parseInt(time)*1000);            function to2(number){                return ((""+number).length == 1?"0"+number:number);            }            return to2(d.getFullYear()) + "-" + to2(d.getMonth() + 1) + "-" + to2(d.getDate()) +                " " + to2(d.getHours()) + ":" + to2(d.getMinutes()) + ":" + to2(d.getSeconds());        });        /*格式化时间 具体到年月日*/        template.helper("ft2",function(time){            if(!time){                return "未知";            }            var d = new Date(parseInt(time)*1000);            function to2(number){                return ((""+number).length == 1?"0"+number:number);            }            return to2(d.getFullYear()) + "-" + to2(d.getMonth() + 1) + "-" + to2(d.getDate()) ;        });        template.helper('ft3',function(){            var d = new Date(new Date().getTime());            function to2(number){                return ((""+number).length == 1?"0"+number:number);            }            return to2(d.getFullYear()) + "-" + to2(d.getMonth() + 1) + "-" + to2(d.getDate()) ;        });        /*格式化时间戳*/        template.helper("ftm4",function(nS){            var nows=new Date(nS);            var year=nows.getFullYear();            var month=nows.getMonth()+1;            var date=nows.getDate();            return month+"-"+date+" "+year;        });        /*格式化时间戳2*/        template.helper("ftm51",function(nS){            var nows=new Date(nS);            var year=nows.getFullYear();            var month=nows.getMonth()+1;            var date=nows.getDate();            return year+"-"+month+"-"+date;        });        /*格式化时间戳 1年，2月，3日*/        template.helper("ftm5",function(nS,num){            var nows=new Date(nS);            var datas;            var year=nows.getFullYear();            var month=nows.getMonth();            var date=nows.getDate();            var nm= parseInt(num);            switch(nm)            {                case 1:                    datas=year;                    break;                case 2:                    var m=new Array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Spt","Oct","Nov","Dec");                    datas=m[month];                    break;                case 3:                    datas=date;                    break;            }            return datas;        });        template.helper('getData1',function(data1, time){            var val;            switch (time) {                case 0:                    val = data1.substring(0,data1.lastIndexOf(' '));                    break;                case 1:                    val = data1.substring(data1.lastIndexOf(' '), data1.length);                    break;                case 2:                    var show_day = new Array('星期一','星期二','星期三','星期四','星期五','星期六','星期日');                    var times = new Date(data1.replace(/-/g,"/"));                    var day = times.getDay();                    val = show_day[day - 1];                    break;            }            return val;        });        template.helper('getVal',function(id,obj){            var val = '';            for(var i=0;i<obj.length;i++){                if(obj[i].id == id){                    val = obj[i].region_name;                }            }            return val;        });        // 格式化价格        template.helper('fp', function(price){            price = parseFloat(price) || 0;            var fprice = (price/100).toFixed(2).split('.') ;            return fprice[0]+'.'+fprice[1];        });        template.helper('fp2', function(price){            price = price || 0;            var fprice = (price/100).toFixed(2).split('.') ;            return fprice[0]+'.<small>'+fprice[1]+'</small>';        });        template.helper('fp3', function(price){        //格式化一口价            price = price || '0';            var priceArr = price.split('—') ;            var price0 = (priceArr[0]/100).toFixed(2).split('.') ;            if(!priceArr[1]){                return price0[0]+'.<small>'+price0[1]+'</small>';            }            var price1 = (priceArr[1]/100).toFixed(2).split('.') ;            return price0[0]+'.<small>'+price0[1]+'</small>'+'-'+price1[0]+'.<small>'+price1[1]+'</small>';        });        template.helper('fp5', function(price){        // 格式化-价格区间            price = price || '0';            var priceArr = price.split('-') ;            var price0 = (priceArr[0]/100).toFixed(2).split('.');            if(!priceArr[1]){                return price0[0]+'.<small>'+price0[1]+'</small>';            }            var price1 = (priceArr[1]/100).toFixed(2).split('.');            return price0[0]+'.<small>'+price0[1]+'</small>'+'-'+price1[0]+'.<small>'+price1[1]+'</small>';        });        // 格式化价格，保留整数        template.helper('fp4', function(price){            price = price || 0;            return (price/100);        });        //格式化价格        template.helper('fp6', function(price){            price = price || 0;            price = price.split(".")[0];            return price;        });        template.helper('fp7', function(price){            //格式化一口价,针对于产品详情页面            price = price || '0';            var priceArr            if(price.indexOf('—') >= 0){                //专项里面的分割                priceArr = price.split('—') ;            }else{                priceArr = price.split('-') ;            }            var price0 = (parseFloat(priceArr[0])/100).toFixed(2).split('.') ;            if(!priceArr[1]){                return price0[0]+'.'+price0[1]+'';            }            var price1 = (parseFloat(priceArr[1])/100).toFixed(2).split('.') ;            return price0[0]+'.'+price0[1]+''+'-'+price1[0]+'.'+price1[1];        });        template.helper('fI', function(url,h,w){        //格式化图片裁剪链接            if(!url){                return "";            }            h = h || 150;            w = w || 150;            if(global.config().image_cname && url.indexOf(".img-") > 0){                for(var i=0;i<global.config().image_cname.length;i++){                    url = url.replace(global.config().image_cname[i].key,global.config().image_cname[i].value);                }            }            return url+'@'+h+"h_"+w+"w_1e_1c_0l_1wh_90Q";        });        template.helper('fImg', function(url,h,w){            //格式化图片裁剪链接(自己上传图片的转换)            if(!url){                return "";            }            h = h || 150;            w = w || 150;            var r = /\..+?\-/;            url = url.replace(r,'.img-');            return url+'@'+h+"h_"+w+"w_1e_1c_0l_1wh";        });        template.helper('PI', function(url,w){            //3D/2D图片等比压缩            if(url.indexOf("http:")==-1 || url.indexOf(".jpg")==-1){                return url;            }            var reg = /^(https?:\/\/.*?)(\/.*?)$/im;            var m = url.match(reg);            url = m[1].replace("oss","img")+m[2];            return url+'@'+w+"w";        });        template.helper("checked",function(value,value2){            if(value == value2){                return ' checked="checked" ';            }            return "";        });        //追评格式化天数        template.helper("fDay",function(time){            var currentTime = new Date().getTime();            var days;            if(time){               days = (currentTime - time)/(1000*60*60*24);            }            return Number.parseInt(days);        });        // 格式化省市区        // 格式化手机号码        template.helper("fphone",function(str){            var r = /[0-9]{4}(?=[0-9]{4}$)/;            return str.replace(r,"****");        });        //格式化分割时间        template.helper("fptime",function(str){            return str.split(" ")[0];        });        template.helper("getArrayValue",function(arr,field,value,retField){            if(!arr || arr.length == 0 ){                return "";            }            for(var i=0;i<arr.length;i++){                if(arr[i][field] == value){                    return arr[i][retField];                }            }            return "";        });        template.helper("substr",function(str,len,suffix){            suffix = suffix || "";            if(!str) return suffix;            return str.substring(0,len) + suffix;        });        template.helper("trim",function(str,char){            char = char || " ";            var reg1 = new RegExp("^"+char+"*?([^"+char+"]|$)");            var reg2 = new RegExp("(["+char+"]*?)"+char+"*$");            return str.replace(reg1,"$1").replace(reg2,"$1");        });        template.helper('str2array', function(str){            str = str || '';            if(!str) return [];            return str.split(',');        });        template.helper('transformUrl', function(url){            return url.replace('oss', 'img');        });        // 截取字段，省略号        template.helper('strDot', function(str,length){            if(str.length>length){                str = str.substring(0,length)+"...";            }            return str;        });                // ie浏览器url参数中文乱码        template.helper('enCodeTo', function(string){            return encodeURI(string);        });        //合并文章地址        template.helper('article', function (id) {            var url = /*window.location.host + */"/article/"+ id +".html";            return url;        });        //合并商品地址        template.helper('getGoodsUrl', function(url){            var urls = "/goods/"+url+".html";            return urls;        });        //大家都在说        template.helper('coventTag', function(str){            str = str || '';            if(!str || typeof str !== 'string') return [];            var tags = str.split(",");            return tags;        });        //广告位判断是否完整        /**         * [checkObj description]         * @return {[Array]} [若查找到有值，则返回改值。若查找不到，总是返回[]空数组，template模板对于[]，相当于undefined处理]         */        template.helper('checkObj', function(objParent, getKey){            if(!objParent) return []            var markObj = objParent            getKey.split('.').some(function (key){                if(!key) return                var isGetArray = key.match(/(.*)\[(.*)\]/)                ,   key2                if(isGetArray){                    if(isGetArray[1]){                        key = isGetArray[1]                        key2 = isGetArray[2]                    }else {                        key = isGetArray[2]                    }                }                markObj = markObj[key]                if(key2 && markObj){                    markObj = markObj[key2]                }                                if(!markObj) {                    markObj = []                    return true                }            })            // if(typeof markObj !== 'object'){            //     markObj = [markObj]            // }            return markObj        });        // 只压缩图片        template.helper('pImg', function (url, q) {            if (!url || !/aliyuncs.com/.test(url) || /(.gif$|@)/.test(url)) return url            url = url.replace('.oss-', '.img-')            q = q || 90            return url + '@' + q + 'q'        });    }};module.exports = template_function;